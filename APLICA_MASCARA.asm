global _aplica_mascara
section .data

section .text
;UBICACIÓN DE LOS PARAMETROS EN LA PILA
;[EBP+8] MASCARA
;[EBP+12] CANAL1
;[EBP+16] CANAL2
;[EBP+20] CANTIDAD --> LARGO DEL VECTOR
;[EBP+24] RESULTADO


_aplica_mascara:
    PUSH EBP			;ARMO CONTEXTO
    MOV EBP, ESP
    
    MOV EAX, [EBP+8]            ;GUARDO EN EAX EL PUNTERO AL VECTOR MASCARA
    MOV EBX, [EBP+12]           ;GUARDO EN EBX EL PUNTERO AL VECTOR CANAL1
    MOV EDX, [EBP+16]           ;GUARDO EN EDX EL PUNTERO AL VECTOR CANAL2
	
    MOV ESI, [EBP+20]           ;GUARDO EL LARGO DEL VECTOR EN ESI!
    SHR ESI, 3                  ;DIVIDO ESI POR 8 --> ME DA LA CANTIDAD DE ITERACIONES
	
    MOV EDI, [EBP+24]           ;GUARDO EN EDI EL PUNTERO AL VECTOR RESULTADO
    
;YA ARMAMOS EL CONTEXTO, AHORA VAMOS A COMENZAR A PROCESAR LA IMAGEN!
    MOV ECX, 0                  ;INICIO EL CONTADOR EN 0!   
    
ciclar:
    CMP ECX, ESI
    JE salir
;TRABAJAMOS EN VECTORCITOS DE 8 BYTES! :)
	MOVQ XMM1, [EBX+ECX*8]  ;GUARDO EN XMM1 EL VECTOR AL CANAL1
	MOVQ XMM2, [EDX+ECX*8]  ;GUARDO EN XMM2 EL VECTOR AL CANAL2
	MOVQ XMM3, [EAX+ECX*8]	;GUARDO EN XMM3 LA MASCARA

	PAND XMM2, XMM3		;HAGO EL AND LOGICO PARA GUARDAR LOS VALORES ORIGINALES QUE DEBEN MANTENERSE.

	PANDN XMM3, XMM1	;HAGO EL COMPLEMENTO DE LA MASCARA PARA GUARDAR LOS VALORES DE REEMPLAZO.

	POR XMM3, XMM2		;JUNTO LOS BYTES SOBREVIVIENTES DE AMBOS CANALES
	
	MOVQ [EDI+ECX*8], XMM3	;GUARDO EL RESULTADO EN EL VECTOR DEL RESULTADO. 
    INC ECX   
    JMP ciclar
    
salir:
    MOV ESP, EBP
    POP EBP
    RET